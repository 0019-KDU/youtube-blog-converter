name: Auto PR Generation

on:
  push:
    branches:
      - 'feature/**'

jobs:
  generate-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write  # Required for label operations

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup remote
      run: |
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git fetch origin

    - name: Get default branch
      id: default-branch
      run: |
        default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
        if [ -z "$default_branch" ]; then
          default_branch=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
        fi
        if [ -z "$default_branch" ]; then
          default_branch="main"
        fi
        echo "default_branch=$default_branch" >> $GITHUB_OUTPUT

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install openai

    - name: Generate PR Body
      id: pr-body
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        BASE_BRANCH: origin/${{ steps.default-branch.outputs.default_branch }}
        GITHUB_DEFAULT_BRANCH: ${{ steps.default-branch.outputs.default_branch }}
      run: |
        python utils/pr_generator.py > pr_body.txt
        body_content=$(sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' pr_body.txt)
        body_content=$(echo "$body_content" | sed 's/"/\\"/g')
        echo "pr_body=$body_content" >> $GITHUB_OUTPUT

    - name: Create Pull Request
      id: create-pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        title: "Feature: ${{ github.ref_name }}"
        base: ${{ steps.default-branch.outputs.default_branch }}
        body: ${{ steps.pr-body.outputs.pr_body }}
        branch: pr-${{ github.ref_name }}
        
    - name: Add label to PR
      if: ${{ success() && steps.create-pr.outputs.pull-request-number }}
      uses: actions/github-script@v6
      with:
        script: |
          try {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.create-pr.outputs.pull-request-number }},
              labels: ['auto-generated']
            })
          } catch (error) {
            console.log('Label not added (might not exist):', error.message)
          }