name: CI/CD for YouTube Blog Converter
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with: python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Code lint (flake8)
        run: flake8 .

      - name: Filesystem scan (Trivy fs)
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: fs
          format: sarif
          severity: HIGH,CRITICAL
          exit-code: 0
          output: trivy-fs-results.sarif

      - name: Secret detection (Gitleaks)
        run: |
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.2_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/
          gitleaks detect --source . --verbose --redact

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        with: sarif_file: trivy-fs-results.sarif

  build-test:
    needs: lint-and-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest --junitxml=results.xml

  docker-build-scan:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: youtube-blog-converter:${{ github.sha }}

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: youtube-blog-converter:${{ github.sha }}
          format: sarif
          severity: HIGH,CRITICAL
          exit-code: 0
          output: trivy-image-results.sarif

      - name: Upload image scan results
        uses: github/codeql-action/upload-sarif@v3
        with: sarif_file: trivy-image-results.sarif

      - name: Smoke test container
        run: |
          docker run -d --name preprod -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -p 5000:5000 youtube-blog-converter:${{ github.sha }}
          sleep 10
          curl --fail http://localhost:5000/health || (docker logs preprod && exit 1)
          docker stop preprod

  sonar-quality:
    needs: docker-build-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: fetch-depth: 0
      - uses: actions/setup-python@v5
        with: python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: SonarQube scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        id: quality
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  deploy:
    needs: docker-build-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/youtube-blog-converter:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/youtube-blog-converter:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Post-deploy smoke test
        run: |
          docker run --rm -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} ${{ secrets.DOCKERHUB_USERNAME }}/youtube-blog-converter:latest curl --fail http://localhost:5000/health

