[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum required version
minversion = 6.0

# Markers for categorizing tests
markers =
    unit: marks tests as unit tests
    integration: marks tests as integration tests
    slow: marks tests as slow running tests
    crewai: marks tests that require crewai dependencies

# Pytest options
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --maxfail=5

# Parallel execution for CI/CD (when pytest-xdist is available)
# addopts for CI can be overridden via command line

# Test output formatting
console_output_style = progress

# Warnings control
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:flask.*
    ignore::RuntimeWarning:flask.*

# Coverage configuration (when using pytest-cov)
# These can be overridden in CI/CD
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */venv/*
    */env/*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod